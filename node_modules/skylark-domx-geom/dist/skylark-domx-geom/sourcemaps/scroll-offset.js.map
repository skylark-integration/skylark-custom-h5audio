{"version":3,"sources":["scroll-offset.js"],"names":["define","langx","styler","geom","scrollOffset","el","offsetLeft","offsetTop","winScroller","noder","scrollingElement","scrollLeft","scrollTop","parentNode"],"mappings":";;;;;;;AAAAA,QACI,gBACA,qBACA,UACF,SAASC,EAAMC,EAAOC,GAkCvB,OAAOA,EAAKC,aA1BZ,SAAsBC,GACrB,IAAIC,EAAa,EAChBC,EAAY,EACZC,EAAcC,MAAMC,mBAErB,GAAIL,EACH,GASCC,GAAcD,EAAGM,WACjBJ,GAAaF,EAAGO,gBACRP,IAAOG,IAAgBH,EAAKA,EAAGQ,aAGzC,OACCP,WAAAA,EACAC,UAAAA","file":"../scroll-offset.js","sourcesContent":["define([\r\n    \"skylark-langx\",\r\n    \"skylark-domx-noder\",\r\n    \"./geom\"\r\n],function(langx,styler,geom) {\r\n\r\n\t/**\r\n\t * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.\r\n\t * The value is returned in real pixels.\r\n\t * @param  {HTMLElement} el\r\n\t * @return {Array}             Offsets in the format of [left, top]\r\n\t */\r\n\tfunction scrollOffset(el) {\r\n\t\tvar offsetLeft = 0,\r\n\t\t\toffsetTop = 0,\r\n\t\t\twinScroller = noder.scrollingElement();\r\n\r\n\t\tif (el) {\r\n\t\t\tdo {\r\n\t\t\t\t/*\r\n\t\t\t\tvar matrix = transforms.matrix(el),\r\n\t\t\t\t\tscaleX = matrix.a,\r\n\t\t\t\t\tscaleY = matrix.d;\r\n\r\n\t\t\t\toffsetLeft += el.scrollLeft * scaleX;\r\n\t\t\t\toffsetTop += el.scrollTop * scaleY;\r\n\t\t\t\t*/\r\n\t\t\t\toffsetLeft += el.scrollLeft;\r\n\t\t\t\toffsetTop += el.scrollTop;\r\n\t\t\t} while (el !== winScroller && (el = el.parentNode));\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\toffsetLeft, \r\n\t\t\toffsetTop\r\n\t\t};\r\n\t}\t\r\n\r\n\treturn geom.scrollOffset = scrollOffset;\r\n});"]}