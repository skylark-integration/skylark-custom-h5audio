{"version":3,"sources":["_normalize_content.js"],"names":["define","types","noder","isElement","isTextNode","isFragment","map","Array","prototype","content","call","isArrayLike","value","test","document","createTextNode","filter"],"mappings":";;;;;;;AAAAA,QACI,sBACH,UACG,eACA,iBACA,iBACF,SAASC,EAAMC,EAAMC,EAAUC,EAAWC,GACxC,IACIC,EAAMC,MAAMC,UAAUF,IAmB7B,OAjBG,SAA0BG,GAItB,MAHuB,mBAAZA,IACPA,EAAUA,KAEPH,EAAII,KAAKT,EAAMU,YAAYF,GAAWA,GAAWA,GAASG,IACxC,mBAAVA,IACPA,EAAQA,KAERT,EAAUS,IAAUR,EAAWQ,IAAUP,EAAWO,GAC7CA,EAEU,iBAAVA,GAAsB,KAAKC,KAAKD,GAChCE,SAASC,eAAeH,QADnC,IAGDI,OAAOJ,GAASA","file":"../_normalize_content.js","sourcesContent":["define([\r\n    \"skylark-langx-types\",\r\n\t\"./noder\",\r\n    \"./is-element\",\r\n    \"./is-text-node\",\r\n    \"./is-fragment\"\r\n],function(types,noder,isElement,isTextNode,isFragment){\r\n    var  \r\n        map = Array.prototype.map;\r\n        \r\n    function normalizeContent(content) {\r\n        if (typeof content === 'function') {\r\n            content = content();\r\n        }\r\n        return map.call(types.isArrayLike(content) ? content : [content],value => {\r\n            if (typeof value === 'function') {\r\n                value = value();\r\n            }\r\n            if (isElement(value) || isTextNode(value) || isFragment(value)) {\r\n                return value;\r\n            }\r\n            if (typeof value === 'string' && /\\S/.test(value)) {\r\n                return document.createTextNode(value);\r\n            }\r\n        }).filter(value => value);\r\n    }\r\n\r\n\treturn normalizeContent;\r\n});"]}