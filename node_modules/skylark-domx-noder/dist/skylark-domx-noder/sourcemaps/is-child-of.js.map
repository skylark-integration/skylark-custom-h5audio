{"version":3,"sources":["is-child-of.js"],"names":["define","noder","isChildOf","node","parent","directly","parentNode","document","documentElement","contains"],"mappings":";;;;;;;AAAAA,QACC,WACC,SAASC,GAyBV,OAAOA,EAAMC,UAlBV,SAAmBC,EAAMC,EAAQC,GAC7B,GAAIA,EACA,OAAOF,EAAKG,aAAeF,EAE/B,GAAIG,SAASC,gBAAgBC,SACzB,OAAOL,EAAOK,SAASN,GAE3B,KAAOA,GAAM,CACT,GAAIC,IAAWD,EACX,OAAO,EAGXA,EAAOA,EAAKG,WAGhB,OAAO","file":"../is-child-of.js","sourcesContent":["define([\r\n\t\"./noder\"\r\n],function(noder){\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\t\r\n\treturn noder.isChildOf = isChildOf;\r\n});"]}