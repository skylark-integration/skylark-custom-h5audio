{"version":3,"sources":["wrapper-inner.js"],"names":["define","noder","slice","Array","prototype","wrapperInner","node","wrapperNode","childNodes","call","appendChild","i","length","this"],"mappings":";;;;;;;AAAAA,QACC,WACC,SAASC,GACP,IAAKC,EAAQC,MAAMC,UAAUF,MAiBhC,OAAOD,EAAMI,aAVV,SAAsBC,EAAMC,GACxB,IAAIC,EAAaN,EAAMO,KAAKH,EAAKE,YACjCF,EAAKI,YAAYH,GACjB,IAAK,IAAII,EAAI,EAAGA,EAAIH,EAAWI,OAAQD,IACnCJ,EAAYG,YAAYF,EAAWG,IAEvC,OAAOE","file":"../wrapper-inner.js","sourcesContent":["define([\r\n\t\"./noder\"\r\n],function(noder){\r\n    var  slice = Array.prototype.slice;\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\t\r\n\treturn noder.wrapperInner = wrapperInner;\r\n});"]}