{"version":3,"sources":["skylark-domx-noder.js"],"names":["define","skylark","types","arrays","strings","scripter","browser","Array","prototype","map","slice","noder","Object","assign","blur","el","generateId","str","tagName","className","src","href","textContent","i","length","sum","charCodeAt","toString","attach","active","doc","document","activeElement","error","body","nodeName","placing","node","isFunction","apply","isArrayLike","neddsFlattern","flatten","isElement","nodeType","isTextNode","isFragment","content","call","value","test","createTextNode","filter","normalizeContent","copyByClone","nodes","cloneNode","enhancePlaceContent","ensureNodes","after","parent","refNode","parentNode","nextSibling","insertBefore","appendChild","this","append","before","clone","deep","isChildOf","directly","documentElement","contains","child","createElement","tag","props","attrs","createElementNS","isHtmlNode","name","setAttribute","fragmentRE","singleTagRE","div","table","tableBody","tableRow","containers","tr","tbody","thead","tfoot","td","th","*","createFragment","html","trim","RegExp","$1","container","innerHTML","xml","split","newXml","edsplit","removeSelfClosingTags","dom","childNodes","forEach","removeChild","text","empty","hasChildNodes","firstChild","focusable","element","hasTabindex","mapName","img","focusableIfVisible","fieldset","toLowerCase","$","is","disabled","closest","visible","fromPoint","x","y","elementFromPoint","fullscreen","exitFullscreen","support","requestFullscreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","rxhtmlTag","rscriptType","result","undefined","isString","replace","isNumber","_html","scripts","querySelectorAll","node1","type","evaluate","isActive","elem","blockNodes","isBlockNode","join","isDoc","DOCUMENT_NODE","isEditable","contentEditable","isFullscreen","isInDocument","isInFrame","window","self","isInput","isWindow","elm","chkName","rootNodeRE","offsetParent","defaultView","getComputedStyle","position","styler","overlay","params","overlayDiv","css","top","left","width","height","zIndex","opacity","ownerDoc","ownerDocument","ownerWindow","parentWindow","prepend","reflow","offsetHeight","children","remove","e","console","warn","oldNode","replaceChild","reverse","root","scrollingElement","selectable","style","onselectstart","MozUserSelect","KhtmlUserSelect","unselectable","langx","throb","timer","time","callback","throbber","clearTimeout","setTimeout","update","textNode","nodeValue","traverse","fn","len","unwrap","wrapperInner","wrapperNode","wrapper","main"],"mappings":"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","file":"../skylark-domx-noder.js","sourcesContent":["define('skylark-domx-noder/noder',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-types\",\r\n    \"skylark-langx-arrays\",\r\n    \"skylark-langx-strings\",\r\n    \"skylark-langx-scripter\",\r\n    \"skylark-domx-browser\"\r\n], function(skylark, types, arrays, strings,scripter,browser) {\r\n    var  \r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    /**\r\n     * Generate id\r\n     * @param   {HTMLElement} el\r\n     * @returns {String}\r\n     * @private\r\n     */\r\n    function generateId(el) {\r\n        var str = el.tagName + el.className + el.src + el.href + el.textContent,\r\n            i = str.length,\r\n            sum = 0;\r\n\r\n        while (i--) {\r\n            sum += str.charCodeAt(i);\r\n        }\r\n\r\n        return sum.toString(36);\r\n    }\r\n\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    Object.assign(noder, {\r\n\r\n\r\n        blur : function(el) {\r\n            el.blur();\r\n        },\r\n\r\n\r\n        generateId\r\n    });\r\n\r\n    return skylark.attach(\"domx.noder\" , noder);\r\n});\ndefine('skylark-domx-noder/active',[\r\n\t\"./noder\"\r\n],function(noder){\r\n\r\n    function activeElement(doc) {\r\n        doc = doc || document;\r\n        var el;\r\n\r\n        // Support: IE 9 only\r\n        // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\r\n        try {\r\n            el = doc.activeElement;\r\n        } catch ( error ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 9 - 11 only\r\n        // IE may return null instead of an element\r\n        // Interestingly, this only seems to occur when NOT in an iframe\r\n        if ( !el ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 11 only\r\n        // IE11 returns a seemingly empty object in some cases when accessing\r\n        // document.activeElement from an <iframe>\r\n        if ( !el.nodeName ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        return el;\r\n    };\r\n\treturn noder.active = activeElement;\r\n});\ndefine('skylark-domx-noder/_enhance_place_content',[\r\n    \"skylark-langx-types\",\r\n    \"skylark-langx-arrays\",\r\n\t\"./noder\"\r\n],function(types,arrays,noder){\r\n    function enhancePlaceContent(placing,node) {\r\n        if (types.isFunction(placing)) {\r\n            return placing.apply(node,[]);\r\n        }\r\n        if (types.isArrayLike(placing)) {\r\n            var neddsFlattern;\r\n            for (var i=0;i<placing.length;i++) {\r\n                if (types.isFunction(placing[i])) {\r\n                    placing[i] = placing[i].apply(node,[]);\r\n                    if (types.isArrayLike(placing[i])) {\r\n                        neddsFlattern = true;\r\n                    }\r\n                }\r\n            }\r\n            if (neddsFlattern) {\r\n                placing = arrays.flatten(placing);\r\n            }\r\n        }\r\n        return placing;\r\n    }\r\n\r\n\treturn enhancePlaceContent;\r\n});\ndefine('skylark-domx-noder/is-element',[\r\n\t\"./noder\"\r\n],function(noder){\r\n \r\n    function isElement(node) {\r\n        return node && node.nodeType === 1;\r\n    }\r\n\r\n\t\r\n\treturn noder.isElement = isElement;\r\n});\ndefine('skylark-domx-noder/is-text-node',[\r\n\t\"./noder\"\r\n],function(noder){\r\n \r\n    function isTextNode(node) {\r\n        return node && node.nodeType === 3;\r\n    }\r\n\r\n\t\r\n\treturn noder.isTextNode = isTextNode;\r\n});\ndefine('skylark-domx-noder/is-fragment',[\r\n\t\"./noder\"\r\n],function(noder){\r\n \r\n    function isFragment(node) {\r\n        return node && node.nodeType === 11;\r\n    }\r\n\r\n\treturn noder.isFragment = isFragment;\r\n});\ndefine('skylark-domx-noder/_normalize_content',[\r\n    \"skylark-langx-types\",\r\n\t\"./noder\",\r\n    \"./is-element\",\r\n    \"./is-text-node\",\r\n    \"./is-fragment\"\r\n],function(types,noder,isElement,isTextNode,isFragment){\r\n    var  \r\n        map = Array.prototype.map;\r\n        \r\n    function normalizeContent(content) {\r\n        if (typeof content === 'function') {\r\n            content = content();\r\n        }\r\n        return map.call(types.isArrayLike(content) ? content : [content],value => {\r\n            if (typeof value === 'function') {\r\n                value = value();\r\n            }\r\n            if (isElement(value) || isTextNode(value) || isFragment(value)) {\r\n                return value;\r\n            }\r\n            if (typeof value === 'string' && /\\S/.test(value)) {\r\n                return document.createTextNode(value);\r\n            }\r\n        }).filter(value => value);\r\n    }\r\n\r\n\treturn normalizeContent;\r\n});\ndefine('skylark-domx-noder/_ensure_nodes',[\r\n    \"skylark-langx-arrays\",\r\n\t\"./noder\",\r\n    \"./_normalize_content\"\r\n],function(arrays,noder,normalizeContent){\r\n    var  \r\n        map = Array.prototype.map;\r\n\r\n    function ensureNodes(content, copyByClone) {\r\n        var nodes = normalizeContent(content);\r\n\r\n\r\n        //if (!types.isArrayLike(nodes)) {\r\n        //    nodes = [nodes];\r\n        //}\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return arrays.flatten(nodes);\r\n    }\r\n\r\n\treturn ensureNodes;\r\n});\ndefine('skylark-domx-noder/after',[\r\n\t\"./noder\",\r\n    \"./_enhance_place_content\",\r\n    \"./_ensure_nodes\"\r\n],function(noder,enhancePlaceContent,ensureNodes){\r\n \r\n    function after(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n\t\r\n\treturn noder.after = after;\r\n});\ndefine('skylark-domx-noder/append',[\r\n    \"./noder\",\r\n    \"./_enhance_place_content\",\r\n    \"./_ensure_nodes\"\r\n],function(noder,enhancePlaceContent,ensureNodes){\r\n \r\n    function append(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n    \r\n    return noder.append = append;\r\n});\ndefine('skylark-domx-noder/before',[\r\n    \"./noder\",\r\n    \"./_enhance_place_content\",\r\n    \"./_ensure_nodes\"\r\n],function(noder,enhancePlaceContent,ensureNodes){\r\n \r\n\r\n    function before(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n\t\r\n\treturn noder.before = before;\r\n});\ndefine('skylark-domx-noder/body',[\r\n\t\"./noder\"\r\n],function(noder){\r\n\tfunction body() {\r\n\t\treturn  document.body;\r\n\t}\r\n\t\r\n\treturn noder.body = body;\r\n});\ndefine('skylark-domx-noder/clone',[\r\n\t\"./noder\"\r\n],function(noder){\r\n \r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        return node.cloneNode(deep);\r\n    }\r\n\r\n\t\r\n\treturn noder.clone = clone;\r\n});\ndefine('skylark-domx-noder/is-child-of',[\r\n\t\"./noder\"\r\n],function(noder){\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\t\r\n\treturn noder.isChildOf = isChildOf;\r\n});\ndefine('skylark-domx-noder/contains',[\r\n\t\"./noder\",\r\n    \"./is-child-of\"\r\n],function(noder,isChildOf){\r\n \r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\t\r\n\treturn noder.contains = contains;\r\n});\ndefine('skylark-domx-noder/create-element',[\r\n    \"skylark-langx-types\",\r\n\t\"./noder\"\r\n],function(types,noder){\r\n \r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {attrs} attrs\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props,attrs, parent) {\r\n        var node;\r\n\r\n        if (/svg/i.test(tag)) {\r\n            node = document.createElementNS(\"http://www.w3.org/2000/svg\", tag)\r\n        } else {\r\n            node = document.createElement(tag);\r\n        }\r\n\r\n        if (types.isHtmlNode(props)) {\r\n            parent = props;\r\n            props = null;\r\n            attrs = null;\r\n        } else if (types.isHtmlNode(attrs)){\r\n            parent = attrs;\r\n            attrs = null;\r\n        }\r\n\r\n        if (props) {\r\n            for (var name in props) {\r\n                node[name] = props[name];\r\n            }\r\n        }\r\n\r\n        if (attrs) {\r\n            for (var name in attrs) {\r\n                node.setAttribute(name, attrs[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            noder.append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n\t\r\n\treturn noder.createElement = createElement;\r\n});\ndefine('skylark-domx-noder/create-fragment',[\r\n    \"skylark-langx-strings\",\r\n\t\"./noder\",\r\n    \"./create-element\"\r\n],function(strings,noder,createElement){\r\n    var fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    function removeSelfClosingTags(xml) {\r\n        var split = xml.split(\"/>\");\r\n        var newXml = \"\";\r\n        for (var i = 0; i < split.length - 1;i++) {\r\n            var edsplit = split[i].split(\"<\");\r\n            newXml += split[i] + \"></\" + edsplit[edsplit.length - 1].split(\" \")[0] + \">\";\r\n        }\r\n        return newXml + split[split.length-1];\r\n    }\r\n\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = strings.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = removeSelfClosingTags(\"\" + html);\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n\t\r\n\treturn noder.createFragment = createFragment;\r\n});\ndefine('skylark-domx-noder/create-text-node',[\r\n\t\"./noder\"\r\n],function(noder){\r\n \r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n\r\n\treturn noder.createTextNode = createTextNode;\r\n});\ndefine('skylark-domx-noder/doc',[\r\n\t\"./noder\"\r\n],function(noder){\r\n \r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n\treturn noder.doc = doc;\r\n});\ndefine('skylark-domx-noder/empty',[\r\n\t\"./noder\"\r\n],function(noder){\r\n \r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\t\r\n\treturn noder.empty = empty;\r\n});\ndefine('skylark-domx-noder/focusable',[\r\n\t\"./noder\"\r\n],function(noder){\r\n \r\n    // Selectors\r\n    function focusable( element, hasTabindex ) {\r\n        var map, mapName, img, focusableIfVisible, fieldset,\r\n            nodeName = element.nodeName.toLowerCase();\r\n\r\n        if ( \"area\" === nodeName ) {\r\n            map = element.parentNode;\r\n            mapName = map.name;\r\n            if ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\r\n                return false;\r\n            }\r\n            img = $( \"img[usemap='#\" + mapName + \"']\" );\r\n            return img.length > 0 && img.is( \":visible\" );\r\n        }\r\n\r\n        if ( /^(input|select|textarea|button|object)$/.test( nodeName ) ) {\r\n            focusableIfVisible = !element.disabled;\r\n\r\n            if ( focusableIfVisible ) {\r\n\r\n                // Form controls within a disabled fieldset are disabled.\r\n                // However, controls within the fieldset's legend do not get disabled.\r\n                // Since controls generally aren't placed inside legends, we skip\r\n                // this portion of the check.\r\n                fieldset = $( element ).closest( \"fieldset\" )[ 0 ];\r\n                if ( fieldset ) {\r\n                    focusableIfVisible = !fieldset.disabled;\r\n                }\r\n            }\r\n        } else if ( \"a\" === nodeName ) {\r\n            focusableIfVisible = element.href || hasTabindex;\r\n        } else {\r\n            focusableIfVisible = hasTabindex;\r\n        }\r\n\r\n        return focusableIfVisible && $( element ).is( \":visible\" ) && visible( $( element ) );\r\n    };\r\n\t\r\n\treturn noder.focusable = focusable;\r\n});\ndefine('skylark-domx-noder/from-point',[\r\n\t\"./noder\"\r\n],function(noder){\r\n\r\n    function fromPoint(x,y) {\r\n        return document.elementFromPoint(x,y);\r\n    }\r\n\r\n\t\r\n\treturn noder.fromPoint = fromPoint;\r\n});\ndefine('skylark-domx-noder/fullscreen',[\r\n    \"skylark-domx-browser\",\r\n\t\"./noder\"\r\n],function(browser,noder){\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullscreen(el) {\r\n        if (el === false) {\r\n            return browser.exitFullscreen.apply(document);\r\n        } else if (el) {\r\n            return el[browser.support.fullscreen.requestFullscreen]();\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\t\r\n\treturn noder.fullscreen = fullscreen;\r\n});\ndefine('skylark-domx-noder/html',[\r\n    \"skylark-langx-types\",\r\n    \"skylark-langx-scripter\",\r\n\t\"./noder\",\r\n    \"./empty\"\r\n],function(types,scripter,noder,empty){\r\n \r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,\r\n       rscriptType = ( /^$|^module$|\\/(?:java|ecma)script/i );\r\n\r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function _html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            empty(node);\r\n            html = html || \"\";\r\n            if (types.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (types.isString(html) || types.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (types.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    function html(node,value) {\r\n        var result = _html(node,value);\r\n\r\n        if (value !== undefined) {\r\n            var scripts = node.querySelectorAll('script');\r\n\r\n            for (var i =0; i<scripts.length; i++) {\r\n                var node1 = scripts[i];\r\n                if (rscriptType.test( node1.type || \"\" ) ) {\r\n                  scripter.evaluate(node1.textContent,node1);\r\n                }\r\n            }       \r\n            return this;         \r\n        } else {\r\n            return result;\r\n        }\r\n    }\r\n\r\n\r\n\treturn noder.html = html;\r\n});\ndefine('skylark-domx-noder/is-active',[\r\n\t\"./noder\"\r\n],function(noder){\r\n    function isActive (elem) {\r\n            return elem === document.activeElement && (elem.type || elem.href);\r\n    }\r\n\r\n\t\r\n\treturn noder.isActive = isActive;\r\n});\ndefine('skylark-domx-noder/is-block-node',[\r\n\t\"./noder\"\r\n],function(noder){\r\n\r\n    var blockNodes = [\"div\", \"p\", \"ul\", \"ol\", \"li\", \"blockquote\", \"hr\", \"pre\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"table\"];\r\n\r\n    function isBlockNode(node) {\r\n        if (!node || node.nodeType === 3) {\r\n          return false;\r\n        }\r\n        return new RegExp(\"^(\" + (blockNodes.join('|')) + \")$\").test(node.nodeName.toLowerCase());\r\n    }\r\n\r\n\r\n\t\r\n\treturn noder.isBlockNode = isBlockNode;\r\n});\ndefine('skylark-domx-noder/is-doc',[\r\n\t\"./noder\"\r\n],function(noder){\r\n    /*   \r\n     * Check to see if a dom node is a document.\r\n     * @param {Node} node\r\n     */\r\n    function isDocument(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n\t\r\n\treturn noder.isDoc = isDocument;\r\n});\ndefine('skylark-domx-noder/is-editable',[\r\n\t\"./noder\"\r\n],function(noder){\r\n \r\n    function isEditable (el) {\r\n      if (!el) { return false; } // no parents were editable\r\n      if (el.contentEditable === 'false') { return false; } // stop the lookup\r\n      if (el.contentEditable === 'true') { return true; } // found a contentEditable element in the chain\r\n      return isEditable(el.parentNode); // contentEditable is set to 'inherit'\r\n    }\r\n\r\n\t\r\n\treturn noder.isEditable = isEditable;\r\n});\ndefine('skylark-domx-noder/is-fullscreen',[\r\n\t\"./noder\",\r\n    \"./fullscreen\"\r\n],function(noder,fullscreen){\r\n \r\n    function isFullscreen(el) {\r\n        return fullscreen() === el;\r\n    }\r\n\t\r\n\treturn noder.isFullscreen = isFullscreen;\r\n});\ndefine('skylark-domx-noder/is-in-document',[\r\n\t\"./noder\"\r\n],function(noder){\r\n    /*   \r\n     * Check to see if a dom node is in the document\r\n     * @param {Node} node\r\n     */\r\n    function isInDocument(node) {\r\n      return (node === document.body) ? true : document.body.contains(node);\r\n    }     \r\n\r\n\t\r\n\treturn noder.isInDocument = isInDocument;\r\n});\ndefine('skylark-domx-noder/is-in-frame',[\r\n\t\"./noder\"\r\n],function(noder){\r\n     function isInFrame() {\r\n        try {\r\n            return window.parent !== window.self;\r\n        } catch (x) {\r\n            return true;\r\n        }\r\n    }\r\n\t\r\n\treturn noder.isInFrame = isInFrame;\r\n});\ndefine('skylark-domx-noder/is-input',[\r\n\t\"./noder\",\r\n    \"./is-editable\"\r\n],function(noder,isEditable){\r\n \r\n    function isInput (el) { \r\n        return el.tagName === 'INPUT' || \r\n               el.tagName === 'TEXTAREA' || \r\n               el.tagName === 'SELECT' || \r\n               isEditable(el); \r\n    }\r\n\t\r\n\treturn noder.isInput = isInput;\r\n});\ndefine('skylark-domx-noder/is-window',[\r\n    \"skylark-langx-types\",\r\n    \"./noder\"\r\n],function(types,noder){\r\n   \r\n    return noder.isWindow = types.isWindow;\r\n\t\r\n});\ndefine('skylark-domx-noder/node-name',[\r\n\t\"./noder\"\r\n],function(noder){\r\n \r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\t\r\n\treturn noder.nodeName = nodeName;\r\n});\ndefine('skylark-domx-noder/offset-parent',[\r\n\t\"./noder\"\r\n],function(noder){\r\n \r\n    var  rootNodeRE = /^(?:body|html)$/i;\r\n    \r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && document.defaultView.getComputedStyle(parent).position == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\t\r\n\treturn noder.offsetParent = offsetParent;\r\n});\ndefine('skylark-domx-noder/overlay',[\r\n\t\"skylark-domx-styler\",\r\n\t\"./noder\"\r\n],function(styler,noder){\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = noder.createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n    return noder.overlay = overlay;\r\n });\ndefine('skylark-domx-noder/owner-doc',[\r\n\t\"./noder\"\r\n],function(noder){\r\n \r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n\t\r\n\treturn noder.ownerDoc = ownerDoc;\r\n});\ndefine('skylark-domx-noder/owner-window',[\r\n\t\"./noder\",\r\n    \"./owner-doc\"\r\n],function(noder,ownerDoc){\r\n \r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n\treturn noder.ownerWindow = ownerWindow;\r\n});\ndefine('skylark-domx-noder/prepend',[\r\n    \"./noder\",\r\n    \"./_enhance_place_content\",\r\n    \"./_ensure_nodes\"\r\n],function(noder,enhancePlaceContent,ensureNodes){\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n\t\r\n\treturn noder.prepend = prepend;\r\n});\ndefine('skylark-domx-noder/reflow',[\r\n\t\"./noder\"\r\n],function(noder){\r\n \r\n    function reflow(elm) {\r\n        if (!elm) {\r\n          elm = document;\r\n        }\r\n        elm.offsetHeight;\r\n\r\n        return this;      \r\n    }\r\n\t\r\n\treturn noder.reflow = reflow;\r\n});\ndefine('skylark-domx-noder/remove-child',[\r\n    \"skylark-langx-types\",\r\n\t\"./noder\"\r\n],function(types,noder){\r\n \r\n\r\n    function removeChild(node,children) {\r\n        if (!types.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n\t\r\n\treturn noder.removeChild = removeChild;\r\n});\ndefine('skylark-domx-noder/remove',[\r\n\t\"./noder\"\r\n],function(noder){\r\n \r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\t\r\n\treturn noder.remove = remove;\r\n});\ndefine('skylark-domx-noder/replace',[\r\n\t\"./noder\"\r\n],function(noder){\r\n     /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n\treturn noder.replace = replace;\r\n});\ndefine('skylark-domx-noder/reverse',[\r\n\t\"./noder\"\r\n],function(noder){\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\t\r\n\treturn noder.reverse = reverse;\r\n});\ndefine('skylark-domx-noder/root',[\r\n\t\"./noder\"\r\n],function(noder){\r\n\tfunction root() {\r\n\t\treturn  document.documentElement;\r\n\t}\r\n\t\r\n\treturn noder.root = root;\r\n});\ndefine('skylark-domx-noder/scrolling-element',[\r\n\t\"./noder\"\r\n],function(noder){\r\n\tfunction scrollingElement() {\r\n\t\treturn document.scrollingElement || document.documentElement;\r\n\t}\r\n\t\r\n\treturn noder.scrollingElement = scrollingElement;\r\n});\ndefine('skylark-domx-noder/selectable',[\r\n\t\"./noder\"\r\n],function(noder){\r\n \r\n\r\n    function selectable(elem, selectable) {\r\n        if (elem === undefined || elem.style === undefined)\r\n            return;\r\n        elem.onselectstart = selectable ? function () {\r\n            return false;\r\n        } : function () {\r\n        };\r\n        elem.style.MozUserSelect = selectable ? 'auto' : 'none';\r\n        elem.style.KhtmlUserSelect = selectable ? 'auto' : 'none';\r\n        elem.unselectable = selectable ? 'on' : 'off';\r\n    }\r\n\r\n\t\r\n\treturn noder.selectable = selectable;\r\n});\ndefine('skylark-domx-noder/throb',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-styler\",\r\n    \"./noder\"\r\n],function(langx,styler,noder) {\r\n\r\n    \r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n\r\n            throbber = noder.createElement(\"div\", {\r\n                \"className\": params.className || \"throbber\"\r\n            }),\r\n            //_overlay = overlay(throbber, {\r\n            //    \"class\": 'overlay fade'\r\n            //}),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    noder.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n\r\n        if (params.style) {\r\n            styler.css(throbber,params.style);\r\n        }\r\n\r\n        //throb = noder.createElement(\"div\", {\r\n        //   \"class\": params.throb && params.throb.className || \"throb\"\r\n        //}),\r\n        //textNode = noder.createTextNode(text || \"\"),\r\n \r\n        var content = params.content ||  '<span class=\"throb\"></span>';\r\n\r\n        //throb.appendChild(textNode);\r\n        //throbber.appendChild(throb);\r\n\r\n        noder.html(throbber,content);\r\n        \r\n        elm.appendChild(throbber);\r\n\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            throbber : throbber,\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    return noder.throb = throb;\r\n});\ndefine('skylark-domx-noder/traverse',[\r\n\t\"./noder\"\r\n],function(noder){\r\n \r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\t\r\n\treturn noder.traverse = traverse;\r\n});\ndefine('skylark-domx-noder/unwrap',[\r\n\t\"./noder\",\r\n    \"./is-doc\"\r\n],function(noder,isDoc){\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n\treturn noder.unwrap = unwrap;\r\n});\ndefine('skylark-domx-noder/wrapper-inner',[\r\n\t\"./noder\"\r\n],function(noder){\r\n    var  slice = Array.prototype.slice;\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\t\r\n\treturn noder.wrapperInner = wrapperInner;\r\n});\ndefine('skylark-domx-noder/wrapper',[\r\n\t\"./noder\"\r\n],function(noder){\r\n \r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (types.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\t\r\n\treturn noder.wrapper = wrapper;\r\n});\ndefine('skylark-domx-noder/main',[\r\n\t\"./noder\",\r\n\t\"./active\",\r\n\t\"./after\",\r\n\t\"./append\",\r\n\t\"./before\",\r\n\t\"./body\",\r\n\t\"./clone\",\r\n\t\"./contains\",\r\n\t\"./create-element\",\r\n\t\"./create-fragment\",\r\n\t\"./create-text-node\",\r\n\t\"./doc\",\r\n\t\"./empty\",\r\n\t\"./focusable\",\r\n\t\"./from-point\",\r\n\t\"./fullscreen\",\r\n\t\"./html\",\r\n\t\"./is-active\",\r\n\t\"./is-block-node\",\r\n\t\"./is-child-of\",\r\n\t\"./is-doc\",\r\n\t\"./is-editable\",\r\n\t\"./is-element\",\r\n\t\"./is-fragment\",\r\n\t\"./is-fullscreen\",\r\n\t\"./is-in-document\",\r\n\t\"./is-in-frame\",\r\n\t\"./is-input\",\r\n\t\"./is-text-node\",\r\n\t\"./is-window\",\r\n\t\"./node-name\",\r\n\t\"./offset-parent\",\r\n\t\"./overlay\",\r\n\t\"./owner-doc\",\r\n\t\"./owner-window\",\r\n\t\"./prepend\",\r\n\t\"./reflow\",\r\n\t\"./remove-child\",\r\n\t\"./remove\",\r\n\t\"./replace\",\r\n\t\"./reverse\",\r\n\t\"./root\",\r\n\t\"./scrolling-element\",\r\n\t\"./selectable\",\r\n\t\"./throb\",\r\n\t\"./traverse\",\r\n\t\"./unwrap\",\r\n\t\"./wrapper-inner\",\r\n\t\"./wrapper\",\r\n\t\"./throb\"\r\n],function(noder){\r\n\treturn noder;\r\n});\ndefine('skylark-domx-noder', ['skylark-domx-noder/main'], function (main) { return main; });\n\n"]}