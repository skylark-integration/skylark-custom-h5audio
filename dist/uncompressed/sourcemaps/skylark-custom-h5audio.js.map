{"version":3,"sources":["skylark-custom-h5audio.js"],"names":[],"mappingsfile":"../skylark-custom-h5audio.js","sourcesContent":["define('skylark-custom-h5audio/player',[\n  \"skylark-langx\",\n  \"skylark-domx-styler\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-query\",\n  \"skylark-domx-plugins-base\"\n],function(langx,styler,noder, eventer,$ , plugins) {\n\n  'use strict'\n\n    var aphtml =\n    '  <div class=\"ap-inner\">'+\n    '    <div class=\"ap-panel\">'+\n    '      <div class=\"ap-item ap--playback\">'+\n    '        <button class=\"ap-controls ap-prev-btn\">'+\n    '          <i class=\"material-icons md-dark\">skip_previous</i>'+\n    '        </button>'+\n    '        <button class=\"ap-controls ap-toggle-btn\">'+\n    '            <i class=\"material-icons md-dark ap--play\">play_arrow</i>'+\n    '            <i class=\"material-icons md-dark ap--pause\">pause</i>'+\n    '        </button>'+\n    '        <button class=\"ap-controls ap-next-btn\">'+\n    '          <i class=\"material-icons md-dark\">skip_next</i>'+\n    '        </button>'+\n    '      </div>'+\n    '      <div class=\"ap-item ap--track\">'+\n    '        <div class=\"ap-info\">'+\n    '          <div class=\"ap-title\">Unknown</div>'+\n    '          <div class=\"ap-time\">'+\n    '            <span class=\"ap-time--current\">--</span>'+\n    '            <span> / </span>'+\n    '            <span class=\"ap-time--duration\">--</span>'+\n    '          </div>'+\n    ''+\n    '          <div class=\"ap-progress-container\">'+\n    '            <div class=\"ap-progress\">'+\n    '              <div class=\"ap-bar\"></div>'+\n    '              <div class=\"ap-preload-bar\"></div>'+\n    '            </div>'+\n    '          </div>'+\n    ''+\n    '        </div>'+\n    '      </div>'+\n    '      <div class=\"ap-item ap--settings\">'+\n    '        <div class=\"ap-controls ap-volume-container\">'+\n    '          <button class=\"ap-controls ap-volume-btn\">'+\n    '              <i class=\"material-icons md-dark ap--volume-on\">volume_up</i>'+\n    '              <i class=\"material-icons md-dark ap--volume-off\">volume_mute</i>'+\n    '          </button>'+\n    '          <div class=\"ap-volume\">'+\n    '            <div class=\"ap-volume-progress\"><div class=\"ap-volume-bar\"></div></div>'+\n    '          </div>'+\n    '        </div>'+\n    '        <button class=\"ap-controls ap-repeat-btn\">'+\n    '          <i class=\"material-icons md-dark\">repeat</i>'+\n    '        </button>'+\n    '        <button class=\"ap-controls ap-shuffle-btn\">'+\n    '          <i class=\"material-icons md-dark\">shuffle</i>'+\n    '        </button>'+\n    '        <button class=\"ap-controls ap-playlist-btn\">'+\n    '          <i class=\"material-icons md-dark\">queue_music</i>'+\n    '        </button>'+\n    '      </div>'+\n    '    </div>'+\n    '  </div>';\n\n\n  function create(el, attr) {\n    var element = document.createElement(el);\n    if(attr) {\n      for(var name in attr) {\n        if(element[name] !== undefined) {\n          element[name] = attr[name];\n        }\n      }\n    }\n    return element;\n  }\n\n  Element.prototype.offset = function() {\n    var el = this.getBoundingClientRect(),\n    scrollLeft = window.pageXOffset || document.documentElement.scrollLeft,\n    scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n\n    return {\n      top: el.top + scrollTop,\n      left: el.left + scrollLeft\n    };\n  };\n\n  Element.prototype.css = function(attr) {\n    if(typeof attr === 'string') {\n      return getComputedStyle(this, '')[attr];\n    }\n    else if(typeof attr === 'object') {\n      for(var name in attr) {\n        if(this.style[name] !== undefined) {\n          this.style[name] = attr[name];\n        }\n      }\n    }\n  };\n\n\n  var CustomHtml5Audio = plugins.Plugin.inherit({\n    klassName : \"CustomHtml5Audio\",\n\n    pluginName : \"intg.custom_html5_audio\",\n\n    options : {\n      volume   : 0.5,\n      autoPlay : false,\n      notification: false,\n      playList : []\n    },\n\n    _construct: function(elm, options) {\n      //this.options = options\n      plugins.Plugin.prototype._construct.call(this,elm,options);\n\n      this._index = 0;\n      this._repeating = false;\n      this._shuffling = null;\n      this._played = [];\n      this._seeking = false;\n      this._rightClick = false;\n      this._apActive = false;\n\n\n      let $el = this.$(),\n          selectors = this.options.selectors;\n\n      this._player = create('div', {\n        'className': 'ap',\n        'id': 'ap',\n        'innerHTML': aphtml\n      });\n\n      if(this._apActive || this._player === null) {\n        return;\n      }\n\n      let settings = this.options;\n\n      this._elm.appendChild(this._player);\n\n      // get player elements\n      this._playBtn        = this._player.querySelector('.ap-toggle-btn');\n      this._prevBtn        = this._player.querySelector('.ap-prev-btn');\n      this._nextBtn        = this._player.querySelector('.ap-next-btn');\n      this._repeatBtn      = this._player.querySelector('.ap-repeat-btn');\n      this._shuffleBtn     = this._player.querySelector('.ap-shuffle-btn');\n      this._volumeBtn      = this._player.querySelector('.ap-volume-btn');\n      this._plBtn          = this._player.querySelector('.ap-playlist-btn');\n      this._curTime        = this._player.querySelector('.ap-time--current');\n      this._durTime        = this._player.querySelector('.ap-time--duration');\n      this._trackTitle     = this._player.querySelector('.ap-title');\n      this._progressBar    = this._player.querySelector('.ap-bar');\n      this._progressBarContaner    = this._player.querySelector('.ap-progress-container');\n      this._preloadBar     = this._player.querySelector('.ap-preload-bar');\n      this._volumeBar      = this._player.querySelector('.ap-volume-bar');\n      this._volumeBarContaner    = this._player.querySelector('.ap-volume-container');\n\n      this._playList = settings.playList;\n\n\n      this.listenTo($(this._playBtn),'click', this.playToggle);\n      this.listenTo($(this._volumeBtn),'click', this.volumeToggle);\n      this.listenTo($(this._repeatBtn),'click', this.repeatToggle);\n      this.listenTo($(this._shuffleBtn),'click', this.shuffleToggle);\n\n      this.listenTo($(this._progressBarContaner),'mousedown', this.handlerBar);\n      this.listenTo($(this._progressBarContaner),'mousemove', this.seek);\n      this.listenTo($(document),'mouseup', this.seekingFalse);\n\n      this.listenTo($(this._volumeBarContaner),'mousedown', this.handlerVol);\n      this.listenTo($(this._volumeBarContaner),'mousemove', this.setVolume);\n      this.listenTo($(document),'mouseup', this.seekingFalse);\n\n      this.listenTo($(this._prevBtn),'click', this.prev);\n      this.listenTo($(this._nextBtn),'click', this.next);\n\n      this._imageDiv = create('div', {\n        'className': 'ap-image'\n      })\n      this._elm.appendChild(this._imageDiv)\n\n      this._apActive = true;\n\n      // Create playlist\n      this.renderPL();\n      this.listenTo($(this._plBtn),'click', this.plToggle);\n\n      // Create audio object\n      this._audio = new Audio();\n      this._audio.volume = settings.volume;\n\n\n\n      if(this.isEmptyList()) {\n        this.empty();\n        return;\n      }\n\n      this._audio.src = this._playList[this._index].file;\n      this._audio.preload = 'auto';\n      this._trackTitle.innerHTML = this._playList[this._index].title;\n      this._volumeBar.style.height = this._audio.volume * 100 + '%';\n      this._volumeLength = this._volumeBar.css('height');\n\n      this.listenTo($(this._audio),'error', this.error);\n      this.listenTo($(this._audio),'timeupdate', this.update);\n      this.listenTo($(this._audio),'ended', this.doEnd);\n      this.listenTo($(this._audio),'play', () => {\n        this._playBtn.classList.add('playing');\n      }, false)\n      this.listenTo($(this._audio),'pause', () => {\n        this._playBtn.classList.remove('playing');\n      }, false)\n\n      if(settings.autoPlay) {\n        this._audio.play();\n        this._plLi[this._index].classList.add('pl-current');\n      }\n\n\n\n    },\n\n\n    /**\n     *  PlayList methods\n     */\n    renderPL : function () {\n      var html = [];\n      var tpl =\n        '<li data-track=\"{count}\">'+\n          '<div class=\"pl-number\">'+\n            '<div class=\"pl-count\">'+\n              '<i class=\"material-icons\">audiotrack</i>'+\n            '</div>'+\n            '<div class=\"pl-playing\">'+\n              '<div class=\"eq\">'+\n                '<div class=\"eq-bar\"></div>'+\n                '<div class=\"eq-bar\"></div>'+\n                '<div class=\"eq-bar\"></div>'+\n              '</div>'+\n            '</div>'+\n          '</div>'+\n          '<div class=\"pl-title\">{title}</div>'+\n          '<button class=\"pl-remove\">'+\n              '<i class=\"material-icons\">delete</i>'+\n          '</button>'+\n        '</li>';\n\n      this._playList.forEach(function(item, i) {\n        html.push(\n          tpl.replace('{count}', i).replace('{title}', item.title)\n        );\n      });\n\n      this._pl = create('div', {\n        'className': 'pl-container hide',\n        'id': 'pl',\n        'innerHTML': !this.isEmptyList() ? '<ul class=\"pl-list\">' + html.join('') + '</ul>' : '<div class=\"pl-empty\">PlayList is empty</div>'\n      });\n\n      this._elm.insertBefore(this._pl, this._player.nextSibling);\n\n      this._plLi = this._pl.querySelectorAll('li');\n\n      this.listenTo($(this._pl),'click', this.listHandler);\n    },\n\n    listHandler : function (evt) {\n      evt.preventDefault();\n      if(evt.target.className === 'pl-title') {\n        var current = parseInt(evt.target.parentNode.getAttribute('data-track'), 10);\n        this._index = current;\n        this.play();\n        this.plActive();\n      }\n      else {\n        var target = evt.target;\n        while(target.className !== this._pl.className) {\n          if(target.className === 'pl-remove') {\n            var isDel = parseInt(target.parentNode.getAttribute('data-track'), 10);\n\n            this._playList.splice(isDel, 1);\n            target.parentNode.parentNode.removeChild(target.parentNode);\n\n            this._plLi = this._pl.querySelectorAll('li');\n\n            [].forEach.call(this._plLi, function(el, i) {\n              el.setAttribute('data-track', i);\n            });\n\n            if(!this._audio.paused) {\n\n              if(this._isDel === this._index) {\n                this.play();\n              }\n\n            }\n            else {\n              if(this.isEmptyList()) {\n                this.empty();\n              }\n              else {\n                // audio.currentTime = 0;\n                this._audio.src = this._playList[index].file;\n                document.title = this._trackTitle.innerHTML = this._playList[index].title;\n                this._progressBar.style.width = 0;\n              }\n            }\n            if(this._isDel < this._index) {\n              this._index--;\n            }\n\n            return;\n          }\n          target = target.parentNode;\n        }\n\n      }\n    },\n\n    plActive : function () {\n      if(this._audio.paused) {\n        this._plLi[index].classList.remove('pl-current');\n        return;\n      }\n      var current = this._index;\n      for(var i = 0, len = this._plLi.length; len > i; i++) {\n        this._plLi[i].classList.remove('pl-current');\n      }\n      this._plLi[current].classList.add('pl-current');\n\n      this._imageDiv.innerHTML = ''\n      if (this._playList[current].icon) {\n        let image = create('img', {\n          src: this._playList[current].icon\n        })\n        this._imageDiv.appendChild(image)\n      }\n    },\n\n\n  /**\n   *  Player methods\n   */\n    error : function () {\n      if (!this.isEmptyList()){\n        this.next();\n      } \n    },\n\n\n   play : function () {\n\n      this._index = (this._index > this._playList.length - 1) ? 0 : this._index;\n      if(this._index < 0) this._index = this._playList.length - 1;\n\n      if(this.isEmptyList()) {\n        this.empty();\n        return;\n      }\n\n      this._played.push(this._index)\n\n      this._audio.src = this._playList[this._index].file;\n      this._audio.preload = 'auto';\n      document.title = this._trackTitle.innerHTML = this._playList[this._index].title;\n      this._audio.play();\n      ///notify(playList[index].title, {\n      ///  icon: playList[index].icon,\n      ///  body: 'Now playing',\n      ///  tag: 'music-player'\n      ///});\n      this.plActive();\n    },\n\n    prev : function () {\n      if (this._played.length > 1) {\n        this._index = this._played.splice(-2)[0];\n      } else {\n        this._index = 0;\n      }\n\n      this.play();\n    },\n\n    next : function (interactive) {\n      if (this._shuffling) {\n        if (this._shuffling.length === 0) {\n          if (this._repeating || this._interactive) {\n            this._shuffling = [...Array(this._playList.length).keys()]\n          } else {\n            this._audio.pause();\n            this.plActive();\n            \n            return;\n          }\n        }\n\n        let i = Math.floor(Math.random() * this._shuffling.length);\n        this._index = this._shuffling.splice(i, 1)[0];\n      } else {\n        if (this._index === this._playList.length - 1 && (!this._repeating && !this._interactive)) {\n          this._audio.pause();\n          this.plActive();\n          this._playBtn.classList.remove('playing');\n          return;\n        }\n\n        this._index = (this._index === this._playList.length - 1) ? 0 : this._index + 1;\n      }\n\n      this.play();\n    },\n\n    isEmptyList : function () {\n      return this._playList.length === 0;\n    },\n\n    empty : function () {\n      this._audio.pause();\n      this._audio.src = '';\n      this._trackTitle.innerHTML = 'queue is empty';\n      this._curTime.innerHTML = '--';\n      this._durTime.innerHTML = '--';\n      this._progressBar.style.width = 0;\n      this._preloadBar.style.width = 0;\n      this._pl.innerHTML = '<div class=\"pl-empty\">PlayList is empty</div>';\n    },\n\n    playToggle : function () {\n      if(this.isEmptyList()) {\n        return;\n      }\n      if(this._audio.paused) {\n        this._audio.play();\n        //notify(playList[index].title, {\n        //  icon: playList[index].icon,\n        //  body: 'Now playing'\n        //});\n        this._playBtn.classList.add('playing');\n      }\n      else {\n        this._audio.pause();\n        this._playBtnclassList.remove('playing');\n      }\n      this.plActive();\n    },\n\n    volumeToggle : function () {\n      if(this._audio.muted) {\n        if(parseInt(this._volumeLength, 10) === 0) {\n          this._volumeBar.style.height = '100%';\n          this._audio.volume = 1;\n        }\n        else {\n          this._volumeBar.style.height = this._volumeLength;\n        }\n        this._audio.muted = false;\n        this._volumeBtn.classList.remove('muted');\n      }\n      else {\n        this._audio.muted = true;\n        this._volumeBar.style.height = 0;\n        this._volumeBtn.classList.add('muted');\n      }\n    },\n\n    repeatToggle : function () {\n      var repeat = this._repeatBtn.classList;\n      if(repeat.contains('ap-active')) {\n        this._repeating = false;\n        repeat.remove('ap-active');\n      }\n      else {\n        this._repeating = true;\n        repeat.add('ap-active');\n      }\n    },\n\n    shuffleToggle :function () {\n      var shuffle = this._shuffleBtn.lassList;\n      if(shuffle.contains('ap-active')) {\n        shuffling = null;\n        shuffle.remove('ap-active');\n      }\n      else {\n        shuffling = [...Array(this._playList.length).keys()]\n        shuffle.add('ap-active');\n      }\n    },\n\n    plToggle : function () {\n      this._pl.classList.toggle('ap-active');\n      this._pl.classList.toggle('hide');\n    },\n\n    update : function () {\n      if(this._audio.readyState === 0) return;\n\n      var barlength = Math.round(this._audio.currentTime * (100 / this._audio.duration));\n      this._progressBar.style.width = barlength + '%';\n\n      var\n      curMins = Math.floor(this._audio.currentTime / 60),\n      curSecs = Math.floor(this._audio.currentTime - curMins * 60),\n      mins = Math.floor(this._audio.duration / 60),\n      secs = Math.floor(this._audio.duration - mins * 60);\n      (curSecs < 10) && (curSecs = '0' + curSecs);\n      (secs < 10) && (secs = '0' + secs);\n\n      this._curTime.innerHTML = curMins + ':' + curSecs;\n      this._durTime.innerHTML = mins + ':' + secs;\n\n      var buffered = this._audio.buffered;\n      if(buffered.length) {\n        var loaded = Math.round(100 * buffered.end(0) / this._audio.duration);\n        this._preloadBar.style.width = loaded + '%';\n      }\n    },\n\n    doEnd : function () {\n\n      this.next(false);\n\n    },\n\n    moveBar : function (evt, el, dir) {\n      var value;\n      if(dir === 'horizontal') {\n        value = Math.round( ((evt.clientX - el.offset().left) + window.pageXOffset) * 100 / el.parentNode.offsetWidth);\n        el.style.width = value + '%';\n        return value;\n      }\n      else {\n        var offset = (el.offset().top + el.offsetHeight)  - window.pageYOffset;\n        value = Math.round((offset - evt.clientY));\n        if(value > 100) value = 100;\n        if(value < 0) value = 0;\n        this._volumeBar.style.height = value + '%';\n        return value;\n      }\n    },\n\n    handlerBar : function (evt) {\n      this._rightClick = (evt.which === 3) ? true : false;\n      this._seeking = true;\n      this.seek(evt);\n    },\n\n    handlerVol : function (evt) {\n      this._rightClick = (evt.which === 3) ? true : false;\n      this._seeking = true;\n      this.setVolume(evt);\n    },\n\n    seek : function (evt) {\n      if(this._seeking && this._rightClick === false && this._audio.readyState !== 0) {\n        var value = this.moveBar(evt, this._progressBar, 'horizontal');\n        this._audio.currentTime = this._audio.duration * (value / 100);\n      }\n    },\n\n    seekingFalse : function () {\n      this._seeking = false;\n    },\n\n    setVolume : function (evt) {\n      this._volumeLength = this._volumeBar.css('height');\n      if(this._seeking && this._rightClick === false) {\n        var value = this.moveBar(evt, this._volumeBar.parentNode, 'vertical') / 100;\n        if(value <= 0) {\n          this._audio.volume = 0;\n          this._volumeBtn.classList.add('muted');\n        }\n        else {\n          if(this._audio.muted) this._audio.muted = false;\n          this._audio.volume = value;\n          this._volumeBtn.classList.remove('muted');\n        }\n      }\n    },\n\n\n\n    /* Destroy method. Clear All */\n    destroy : function () {\n      if(!this._apActive) return;\n\n\n      noder.remove(this._player);\n      noder.remove(this._pl);\n\n      this._audio.pause();\n      this._apActive = false;\n    }\n\n  });\n\n  plugins.register(CustomHtml5Audio);\n\n\n  return CustomHtml5Audio;\n\n});\n\ndefine('skylark-custom-h5audio/main',[\r\n\t\"./player\"\r\n],function(AudioPlayer){\r\n\treturn AudioPlayer;\r\n});\ndefine('skylark-custom-h5audio', ['skylark-custom-h5audio/main'], function (main) { return main; });\n\n"]}